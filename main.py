import time
from datetime import datetime, date
from typing import Optional
from dotenv import load_dotenv
import os
import random
import logging

import vk_api
import textwrap

load_dotenv()


TOKEN = os.getenv('VK_API_TOKEN')

vk_session = vk_api.VkApi(token=TOKEN)
vk = vk_session.get_api()

EXCLUDE_PEOPLE = [
    "–í–∏–∫—Ç–æ—Ä–∏—è –ü–∞–Ω—á–µ–Ω–∫–æ–≤–∞",
    "–°–≤–µ—Ç–ª–∞–Ω–∞ –ö–∏—Å–µ–ª–µ–≤–∞",
    "–¢–∞—Ç—å—è–Ω–∞ –í–∞–ª–µ–Ω—Ç–∏–Ω–æ–≤–Ω–∞",
    "–õ—é–¥–º–∏–ª–∞ –û—Å—Ç–∞–ø–µ–Ω–∫–æ",
    "–í–∏–∫—Ç–æ—Ä–∏—è –ü–∞–Ω—á–µ–Ω–∫–æ–≤–∞",
    "–ú–∞—Ä–∏—è –ü—Ä–∏–ª–∏–ø–∫–æ",
    "–Æ–ª–∏—è –ì–∏—Ä–µ–≤–∞—è-–ë–µ–ª–æ–∫–æ–Ω–µ–≤–∞",
    "–ò–Ω–Ω–∞ –õ–∞–≤—Ä–∏–Ω–µ–Ω–∫–æ",
    "–ù–∞—Ç–∞–ª—å—è –í—ã–ø–∏—Ä–∞–π–ª–æ–≤–∞",
    "–û–ª—è –ü–∞—Ö–æ–º–æ–≤–∞",
    "–õ–∞—Ä–∏—Å–∞ –ö–æ—Å—É—Ö–∏–Ω–∞",
    "–ú–∞—Ä–∏–Ω–∞ –ï–≤—Å—Ç–∞—Ñ—å–µ–≤–∞",
    "–í–∞–ª–µ–Ω—Ç–∏–Ω–∞ –ù–æ–∑–¥—Ä–∏–Ω–∞",
    "–ï–≤–≥–µ–Ω–∏—è –ë–∞–≥–∞—Ç—É—Ä–∏—è",
    "–ê–Ω—ç–ª–∏—è –ü–æ–≥–æ—Ä–µ–ª–æ–≤–∞",
    "–ê–ª–∏–Ω–∞ –®–µ—Ä—Å—Ç—é–∫",
    "Larisa Larisa",
    "–î–∞—Ä—å—è –õ–µ–±–µ–¥–µ–≤–∞",
    "–î–∞—Ä—å—è –ù–æ–∑–¥—Ä–∏–Ω–∞",
]


upload = vk_api.VkUpload(vk_session)
photo = upload.photo_messages('photo.jpg')[0]
attachment = f"photo{photo['owner_id']}_{photo['id']}"


def generate_message(name: str) -> str:
    return textwrap.dedent(f"""\
        {name}, –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –î–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!
        –°—á–∞—Å—Ç—å—è, –ª—é–±–≤–∏, –º–Ω–æ–≥–æ —Ü–≤–µ—Ç–æ–≤ –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –¥–µ–Ω—å!
        üíêüå∫üå∏üåπüå∑üí•üåüüéâüíñüéÄ‚ù§Ô∏èüíùüéÇüçπüç∫üç∑üç∏

        –î–ª—è –≤–∞—Å —è –¥–∞—Ä—é —Å–∫–∏–¥–∫—É 1000‚ÇΩ –Ω–∞ –ª—é–±—É—é –Ω–æ–≤—É—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É —É –Ω–∞—Å –≤ —Å—Ç—É–¥–∏–∏. –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–¥–∞—Ä–∫–æ–º –º–æ–∂–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞.

        –ß—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –æ—Ç–≤–µ—Ç ¬´+¬ª

        –¢–æ–ø –º–∞—Å—Ç–µ—Ä –®–∫–æ–ª—ã-—Å—Ç—É–¥–∏–∏ –ø–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω–æ–≥–æ –º–∞–∫–∏—è–∂–∞ ¬´–≠–°–¢–ï–¢–ò–ö–ê¬ª –ï–≤–≥–µ–Ω–∏—è –ú—É—Ä–∞–≤–ª—ë–≤–∞

        https://vk.com/brovibelg_pm
    """)


def parse_vk_bdate(bdate_str: str) -> Optional[date]:
    """
    –ü–∞—Ä—Å–∏—Ç –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –∏–∑ VK (—Ñ–æ—Ä–º–∞—Ç—ã: 'dd.mm' –∏–ª–∏ 'dd.mm.yyyy')
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç datetime.date –∏–ª–∏ None, –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
    """
    if bdate_str is None:
        return None

    try:
        parts = bdate_str.strip().split('.')
        if len(parts) == 3:
            day, month, year = map(int, parts)
            return date(year, month, day)
        elif len(parts) == 2:
            day, month = map(int, parts)
            return date(1900, month, day)
        else:
            return None
    except Exception:
        return None


def send_birthday_congrats():
    today = datetime.now()
    logging.info(f"–°–µ–≥–æ–¥–Ω—è: {today.strftime('%d.%m')}")

    try:
        friends = vk.friends.get(fields='bdate,sex')['items']
    except Exception as e:
        logging.error(f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥—Ä—É–∑–µ–π: {e}')
        return

    for friend in friends:
        bday = parse_vk_bdate(friend.get('bdate'))
        if bday is None:
            continue

        if bday.day == today.day and bday.month == today.month and friend['sex'] == 1:
            if f'{friend["first_name"]} {friend["last_name"]}' in EXCLUDE_PEOPLE:
                logging.info(f'–°–µ–≥–æ–¥–Ω—è –î–† —É {friend["first_name"]} {friend["last_name"]}, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ')
                continue

            vk.messages.send(
                user_id=friend['id'],
                message=generate_message(friend["first_name"]),
                random_id=int(time.time() * 1000),
                attachment=attachment
            )
            time.sleep(random.uniform(2.5, 5.0))
            logging.info(f'–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {friend["first_name"]} {friend["last_name"]}')


if __name__ == '__main__':
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - %(levelname)s - %(message)s",
        handlers=[
            logging.StreamHandler(),
            logging.FileHandler("log.log")
        ]
    )
    # send_birthday_congrats()
    vk.messages.send(
        user_id=11830595,
        message=generate_message("–ñ–µ–Ω—è"),
        random_id=int(time.time() * 1000),
        attachment=attachment
    )



# id –∂–µ–Ω–∏ 11830595